package client.gui;

import client.Client;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.File;
import java.io.IOException;

/**
 * @author rayquaza
 */
public class TransferFrame extends javax.swing.JFrame {

    private final DefaultListModel<String> filesListModel = new DefaultListModel<>();

    private final Client client;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Choice choice;
    private JTextField searchField;
    private JTable searchResults;
    private JList<String> sharedFiles;
    // End of variables declaration//GEN-END:variables

    /**
     * Creates new form ClientFrame
     *
     * @param client current client
     */
    public TransferFrame(Client client) {
        this.client = client;
        initComponents();
    }

    public void throwError(String message) {
        JOptionPane.showMessageDialog(null, message, "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    public void addToList(String[] tokens) {
        DefaultTableModel model = (DefaultTableModel) searchResults.getModel();
        model.addRow(new Object[]{tokens[1], tokens[2]});
    }

    public void clearTable() {
        DefaultTableModel model = (DefaultTableModel) searchResults.getModel();
        model.setNumRows(0);
        searchField.setText("Search files ...");
    }

    private void selectFile() {
        JFileChooser fileChooser = new JFileChooser(System.getProperty("user.dir"));
        fileChooser.setDialogTitle("Choose a file that you would like to share: ");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int value = fileChooser.showOpenDialog(null);
        if (value == JFileChooser.APPROVE_OPTION) {
            String file = fileChooser.getSelectedFile().toString();
            String element = file.substring(file.lastIndexOf(File.separator) + 1).replace(" ", "_");
            if (!filesListModel.contains(element)) {
                filesListModel.addElement(element);
            }
            String command = "share " + file;
            client.writeCommand(command);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choice = new java.awt.Choice();
        searchField = new javax.swing.JTextField();
        searchResults = new javax.swing.JTable();
        sharedFiles = new javax.swing.JList<>(filesListModel);
        JPanel searchPanel = new JPanel();
        JPanel sharedPanel = new JPanel();
        JScrollPane searchScrollPane = new JScrollPane();
        JScrollPane sharedScrollPane = new JScrollPane();
        JButton searchButton = new JButton();
        JButton downloadButton = new JButton();
        JButton openButton = new JButton();
        JButton shareButton = new JButton();
        JButton removeButton = new JButton();
        TitledBorder searchBorder = new TitledBorder("Search and download files:");
        TitledBorder sharedBorder = new TitledBorder("Your shared files:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        setTitle("Transfers");

        choice.add("Transfers");
        choice.add("ChatRoom");
        choice.addItemListener(this::chooseItem);

        searchField.setText("Search files...");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldGainFocus();
            }
        });
        searchField.addActionListener(this::actionPerformed);

        searchButton.setText("Search");
        searchButton.addActionListener(this::searchButtonActionPerformed);

        //noinspection rawtypes
        searchResults.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "File name", "Peer name"
                }
        ) {
            final Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class
            };
            final boolean[] canEdit = new boolean[]{
                    false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        searchScrollPane.setViewportView(searchResults);

        downloadButton.setText("Download");
        downloadButton.addActionListener(this::downloadButtonActionPerformed);

        openButton.setText("Open downloads");
        openButton.addActionListener(this::openButtonActionPerformed);

        searchBorder.setTitleJustification(TitledBorder.CENTER);
        searchBorder.setTitlePosition(TitledBorder.TOP);
        searchBorder.setTitleFont(new Font("Verdana", Font.BOLD, 16));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(jPanel1Layout);
        searchPanel.setBorder(searchBorder);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(searchScrollPane)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(searchButton))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(134, 134, 134)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(downloadButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(openButton)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(searchButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(openButton)
                                        .addComponent(downloadButton))
                                .addContainerGap())
        );

        sharedScrollPane.setViewportView(sharedFiles);

        shareButton.setText("Share");
        shareButton.addActionListener(this::shareButtonActionPerformed);

        removeButton.setText("Remove");
        removeButton.addActionListener(this::removeButtonActionPerformed);

        sharedBorder.setTitleJustification(TitledBorder.CENTER);
        sharedBorder.setTitlePosition(TitledBorder.TOP);
        sharedBorder.setTitleFont(new Font("Verdana", Font.BOLD, 16));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(sharedPanel);
        sharedPanel.setLayout(jPanel2Layout);
        sharedPanel.setBorder(sharedBorder);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(sharedScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(157, 157, 157)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(shareButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(removeButton)))
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                //.addGap(18, 18, 18)
                                .addGap(18, 18, 18)
                                .addComponent(sharedScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(shareButton)
                                        .addComponent(removeButton))
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()
                                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sharedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sharedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseItem(java.awt.event.ItemEvent evt) {
        if (choice.getSelectedItem().equals("ChatRoom")) {
            choice.select("Transfers");
            setVisible(false);
            client.switchFrame("chat");
        }
    }

    private void actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed
        search();
    }//GEN-LAST:event_actionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        search();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchFieldGainFocus() {//GEN-FIRST:event_searchFieldGainFocus
        searchField.setText("");
    }//GEN-LAST:event_searchFieldGainFocus

    private void shareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shareButtonActionPerformed
        selectFile();
    }//GEN-LAST:event_shareButtonActionPerformed

    private void downloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadButtonActionPerformed
        if (!searchResults.getSelectionModel().isSelectionEmpty()) {
            DefaultTableModel model = (DefaultTableModel) searchResults.getModel();
            int row = searchResults.getSelectedRow();
            String fileName = (String) model.getValueAt(row, 0);
            String peerName = (String) model.getValueAt(row, 1);
            String command = "request " + fileName + " " + peerName;
            client.writeCommand(command);
            searchResults.clearSelection();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a file for download", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_downloadButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String dir = System.getProperty("user.dir") + File.separator + "src" + File.separator + "main" + File.separator + "resources" + File.separator + "downloads";
            Desktop.getDesktop().open(new File(dir));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int index = sharedFiles.getSelectedIndex();
        if (index != -1) {
            String file = sharedFiles.getSelectedValue();
            String command = "remove " + file;
            client.writeCommand(command);
            //noinspection rawtypes
            ((DefaultListModel) sharedFiles.getModel()).remove(index);
        } else {
            JOptionPane.showMessageDialog(null, "Please select file to remove", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void search() {
        String text = searchField.getText();
        if (text.length() > 0) {
            searchResults.clearSelection();
            DefaultTableModel model = (DefaultTableModel) searchResults.getModel();
            model.setNumRows(0);
            String command = "search " + text;
            client.writeCommand(command);
        }
    }
}
